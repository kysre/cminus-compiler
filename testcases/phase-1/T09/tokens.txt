1.	(KEYWORD, int) (ID, b) (SYMBOL, ;) 
2.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, d) (SYMBOL, ,) (KEYWORD, int) (ID, e) (SYMBOL, )) (SYMBOL, {) 
3.	(KEYWORD, int) (ID, f) (SYMBOL, ;) 
4.	(KEYWORD, void) (ID, foo2) (SYMBOL, () (KEYWORD, int) (ID, k) (SYMBOL, [) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {) 
5.	(KEYWORD, return) (ID, k) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, +) (ID, k) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;) 
6.	(SYMBOL, }) 
7.	(KEYWORD, int) (ID, fff) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, ;) 
8.	(ID, fff) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (ID, d) (SYMBOL, ;) 
9.	(ID, fff) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, d) (SYMBOL, +) (NUM, 1) (SYMBOL, ;) 
10.	(ID, f) (SYMBOL, =) (ID, foo2) (SYMBOL, () (ID, fff) (SYMBOL, )) (SYMBOL, ;) 
11.	(ID, b) (SYMBOL, =) (ID, e) (SYMBOL, +) (ID, f) (SYMBOL, ;) 
12.	(KEYWORD, while) (SYMBOL, () (ID, d) (SYMBOL, <) (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
13.	(ID, f) (SYMBOL, =) (ID, f) (SYMBOL, +) (ID, d) (SYMBOL, ;) 
14.	(ID, d) (SYMBOL, =) (ID, d) (SYMBOL, -) (NUM, 1) (SYMBOL, ;) 
15.	(KEYWORD, if) (SYMBOL, () (ID, d) (SYMBOL, ==) (SYMBOL, )) 
16.	(KEYWORD, break) (SYMBOL, ;) 
17.	(KEYWORD, else) (ID, d) (SYMBOL, ==) (NUM, 1) (SYMBOL, ;) 
18.	(KEYWORD, endif) 
19.	(SYMBOL, }) 
21.	(KEYWORD, return) (ID, f) (SYMBOL, +) (ID, b) (SYMBOL, ;) 
22.	(SYMBOL, }) 
23.	(KEYWORD, int) (ID, a) (SYMBOL, =) (SYMBOL, ;) 
24.	(KEYWORD, int) (ID, arr) (SYMBOL, [) (ID, a) (SYMBOL, ]) (SYMBOL, ;) 
25.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
26.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
27.	(ID, a) (SYMBOL, =) (SYMBOL, -) (NUM, 3) (SYMBOL, +) (SYMBOL, +) (NUM, 11) (SYMBOL, ;) 
28.	(ID, a) (SYMBOL, +) (ID, a) (SYMBOL, ;) 
29.	(ID, b) (SYMBOL, =) (NUM, 5) (SYMBOL, *) (ID, a) (SYMBOL, +) (ID, foo) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, a) (SYMBOL, )) (SYMBOL, ;) 
30.	(ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, b) (SYMBOL, +) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
31.	(ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, =) (ID, foo) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, ,) (ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
32.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (NUM, 3) (SYMBOL, )) (SYMBOL, {) 
33.	(ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (SYMBOL, -) (NUM, 7) (SYMBOL, ;) 
34.	(SYMBOL, }) 
35.	(KEYWORD, else) 
36.	(SYMBOL, {) 
38.	(KEYWORD, void) (ID, func) (SYMBOL, () (KEYWORD, int) (ID, k) (SYMBOL, [) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {) 
39.	(KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
40.	(KEYWORD, if) (SYMBOL, () (ID, k) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, )) 
41.	(KEYWORD, return) (ID, k) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, +) (ID, k) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;) 
42.	(KEYWORD, return) (ID, k) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, ;) 
43.	(SYMBOL, }) 
44.	(KEYWORD, return) (SYMBOL, ;) 
45.	(SYMBOL, }) 
47.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, d) (SYMBOL, ,) (KEYWORD, int) (ID, e) (SYMBOL, )) (SYMBOL, {) 
48.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
49.	(ID, a) (SYMBOL, =) (NUM, 5) (SYMBOL, ;) 
50.	(KEYWORD, while) (SYMBOL, () (ID, a) (SYMBOL, <) (NUM, 10) (SYMBOL, )) (KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 5) (SYMBOL, )) (KEYWORD, break) (SYMBOL, ;) (KEYWORD, else) (ID, a) (SYMBOL, =) (ID, a) (SYMBOL, +) (NUM, 1) (SYMBOL, ;) (KEYWORD, endif) 
51.	(SYMBOL, }) 
